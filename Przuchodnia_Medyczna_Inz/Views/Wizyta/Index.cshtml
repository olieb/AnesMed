@model IEnumerable<Przuchodnia_Medyczna_Inz.Models.Wizyta>

@{
    ViewBag.Title = "Wizyty";
}
<br />



@if (ViewBag.Akcja != null)
{
    if (ViewBag.Akcja == Przuchodnia_Medyczna_Inz.Helpers.ActionMessage.Created ||
        ViewBag.Akcja == Przuchodnia_Medyczna_Inz.Helpers.ActionMessage.Edited || 
        ViewBag.Akcja == Przuchodnia_Medyczna_Inz.Helpers.ActionMessage.Deleted)
    {
        <div class="alert alert-success">
            <h4>@Przuchodnia_Medyczna_Inz.Helpers.FullDescription.GetDescription(@ViewBag.Akcja)<b>@ViewBag.info</b></h4>
        </div>
    }

    if (ViewBag.Akcja == Przuchodnia_Medyczna_Inz.Helpers.ActionMessage.Error)
    {
        <div class="alert alert-danger">

            <h4>@Przuchodnia_Medyczna_Inz.Helpers.FullDescription.GetDescription(@ViewBag.Akcja) <b>@ViewBag.info</b></h4>
        </div>
    }
}
<div class="container">
    <div class="row" style="margin-right: 20px;">
@if (Request.IsAuthenticated && User.IsInRole("Administrator"))
{
        <div class="title col-md-7 col-md-offset-2"> Lista wszystkich zaplanowanych wizyt</div>
}
else
{
     <div class="title col-md-7 col-md-offset-2"> Lista twoich wizyt</div>
}
    @if (Request.IsAuthenticated && !User.IsInRole("Administrator")) { 
           <div class="col-md-3">
            <a href="@Url.Action("Create", "Wizyta")" class="btn btn-success">
                <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span>
                Umów wizytę lub badanie
            </a>
        </div>
    }
    </div>
</div>
<br />
@using(Html.BeginForm("Index", "Wizyta", FormMethod.Post)){
<div class="container" style="background-color: #309BBE; color: white; border-radius: 15px;">
    <div class="row">
        <div class="form-group">
            <div class="col-md-3">
                <br />
                <h4>Data od</h4>
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="glyphicon glyphicon-calendar fa fa-calendar text-info"></i>
                    </span>
                    <input type="text" name="startDate" value="@TempData["startDate"]" class="form-control" />
                </div>
            </div>
            <div class="col-md-3">
                <br />
                <h4>Data do</h4>
                <div class="input-group">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar fa fa-calendar text-info"></span>
                    </span>
                    <input type="text" name="endDate" value="@TempData["endDate"]" class="form-control" />
                </div>
            </div>
            <div class="col-md-3">
                <br />
                <h4>Status wizyty</h4>
                <div class="input-group">                    
                   @Html.DropDownList("Status", new SelectList(Enum.GetValues(typeof(Przuchodnia_Medyczna_Inz.Models.Status))), "--Wybierz Status--", new { @class = "form-control", @onClick = "hideElem()" })
                </div>
            </div>
            <div class="col-md-offset-3">
                <button style="margin-top: 4.3%;" class=" btn btn-default" type="submit">
                    <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                    Szukaj
                </button>
            </div>
            <br />
        </div>
    </div>
</div>
}

<br />
@if (@ViewBag.Wizyty > 0) { 
    <table class="table">
        <tr class="head-table">
            <th>Data</th>
            <th>Godzina</th>
            <th>Lekarz</th>
            <th>Specjalizacja</th>
            <th>Adres Wizyty</th>
            @if (Request.IsAuthenticated && User.IsInRole("Pacjent") || User.IsInRole("Lekarz"))
            {
            <th>Diagnoza</th>
            }
            @if (Request.IsAuthenticated && User.IsInRole("Administrator"))
            {
                <th>Pacjent</th>
                <th>Pacjent Pesel</th>
            }
            <th></th>
        </tr>    
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Data)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Godzina)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pracownik.ImieNazwisko)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pracownik.Specjalizacja.Nazwa)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pracownik.Placowka.Adres.FullAdres)
            </td>
            <td>
                @if (Request.IsAuthenticated && User.IsInRole("Pacjent") || User.IsInRole("Lekarz"))
                {
                      @Html.DisplayFor(modelItem => item.Diagnoza)
                }
            </td>
            @if (Request.IsAuthenticated && User.IsInRole("Administrator"))
            {
                <td>
                    @Html.DisplayFor(modelItem => item.Pacjent.ImieNazwisko)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Pacjent.Pesel)
                </td>
            }
            <td>
                @if (item.Data < DateTime.Today || item.Status == Przuchodnia_Medyczna_Inz.Models.Status.Odbyta)
                {
                <a href="@Url.Action("Delete", new { id = item.WizytaID })" data-toggle="modal" data-target="#wizyta-delete" title="Usuń z listy">
                    <i class="fa fa-remove" style="font-size:25px; color: red;"></i>
                </a>
                }
                else
                { 
                <a href="@Url.Action("Delete", new { id = item.WizytaID })" data-toggle="modal" data-target="#wizyta-delete" title="Anuluj wizytę">
                    <i class="fa fa-calendar-times-o" style="font-size:25px"></i>
                </a>
                }
            </td>
        </tr>    
    }
</table>
}
else
{
    <div class="col-md-8 col-md-offset-4">
        <h3 class ="head-table">Nie masz zarezerwowanych wizyt.</h3>
    </div>
}
@if (HttpContext.Current.User.IsInRole("Administrator"))
{
<div id="termin-add" class="modal fade hidden-print" tabindex="-1" role="dialog">
    @Html.Partial("_TerminCreate", new Przuchodnia_Medyczna_Inz.Models.Wizyta())
</div>
}
<div id="wizyta-delete" class="modal fade hidden-print" tabindex="-1" role="dialog">
</div>
<script type="text/javascript">
    function hideElem() {
            var stat = document.getElementById("Status");
            stat[2].hidden = true;
            stat[4].hidden = true;
        }

    
    var emptyModalContent = function () {
    $('#wizyta-delete').removeData('bs.modal').find('.modal-content').empty();
    };
    $('#wizyta-delete').on('hidden.bs.modal', function () {
        emptyModalContent();
    });

    $(function(){
        $('.input-group input[name="startDate"]').daterangepicker(
       {
           locale: {
               format: 'DD/MM/YYYY',
           },
           showDropdowns: true,
           daysOfWeekDisabled: [0, 6],
           singleDatePicker: true

       })
        $('.input-group input[name="endDate"]').daterangepicker(
       {
           locale: {
               format: 'DD/MM/YYYY',
           },
           showDropdowns: true,
           daysOfWeekDisabled: [0, 6],
           singleDatePicker: true
       })
        var startDate = $(".input-group input[name='startDate']").val();
        var endDate = $(".input-group input[name='endDate']").val();
        start = startDate.split('/');
        end = endDate.split('/');
        var st = Number(start[2] + start[1] + start[0])
        var nd = Number(end[2] + end[1] + end[0])

        if (st > nd) {
            $('.input-group input[name="endDate"]').css("border-color","red");
            alert("Data Od("+startDate+") nie może byc późniejsza od daty Do("+endDate+").");
        }
    });
</script>